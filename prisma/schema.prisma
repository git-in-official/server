generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  GOOGLE
  APPLE
}

enum ReactoinType {
  SCRAP
}

// SCRAPKING은 임시입니다.
enum AchievementName {
  SCRAPKING
}

model User {
  id         String   @id @default(uuid())
  provider   Provider
  providerId String
  name       String
  avatarUrl  String?

  mainAchienementId String?
  mainAchienement   Achievement?             @relation(fields: [mainAchienementId], references: [id])
  Poem              Poem[]
  achievements      AchievementAcquisition[]
  Reaction          Reaction[]

  @@unique([provider, providerId])
}

model Poem {
  id              String   @id @default(uuid())
  title           String
  content         String
  textAlign       String
  textSize        Int
  textFont        String
  themes          String[]
  interactions    String[]
  isRecorded      Boolean
  status          String
  originalContent String?
  originalTitle   String?
  createdAt       DateTime @default(now())

  authorId String
  author   User       @relation(fields: [authorId], references: [id])
  Reaction Reaction[]
}

model Reaction {
  id        String       @id @default(uuid())
  type      ReactoinType
  createdAt DateTime     @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])
  poemId String
  poem   Poem   @relation(fields: [poemId], references: [id])
}

model Achievement {
  id        String          @id @default(uuid())
  name      AchievementName
  icon      String
  createdAt DateTime        @default(now())

  acquisitionUser       User[]
  achievementAcquistion AchievementAcquisition[]
}

model AchievementAcquisition {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  userId        String
  user          User        @relation(fields: [userId], references: [id])
  achievementId String
  achievement   Achievement @relation(fields: [achievementId], references: [id])
}
